name: "CI - Stage 2 - Security Scan - SAST & SCA (.NET)"

on:
  push:
    branches: [main, develop, "feature/**"]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: 📐 Security Scan Setup (.NET)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore

  dotnet-vulnerabilities:
    name: 🧪 SCA - dotnet list package
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Scan for vulnerabilities
        run: dotnet list package --vulnerable --include-transitive > dotnet-vuln-report.txt || true

      - name: Show high severity vulnerabilities
        run: |
          if grep -i "Severity.*High\|Severity.*Critical" dotnet-vuln-report.txt; then
            echo "⚠️ High or Critical severity vulnerabilities detected."
            grep -i "Severity.*High\|Severity.*Critical" dotnet-vuln-report.txt
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: dotnet-vulnerability-report
          path: dotnet-vuln-report.txt
          retention-days: 7

  owasp-sca:
    name: 🧪 SCA - OWASP Dependency Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Download OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip
          unzip dependency-check-8.4.0-release.zip
      - name: Run OWASP Scan for .NET
        run: |
          dependency-check/bin/dependency-check.sh \
            --project "tradeport-order-service" \
            --scan . \
            --format "ALL" \
            --out . \
            --enableExperimental \
            --suppression ./.github/owasp-suppressions.xml \
            | tee dependency-check-report.txt || true
      - name: Check for Critical vulnerabilities
        run: |
          if grep -q "CRITICAL" dependency-check-report.txt; then
            echo "🚨 Critical vulnerabilities found"
            grep "CRITICAL" dependency-check-report.txt
            # Uncomment to fail the pipeline when critical vulnerabilities are found
            # exit 1
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check
          path: |
            dependency-check-report.html
            dependency-check-report.xml
            dependency-check-report.json
          retention-days: 7

  security-code-scan:
    name: 🔍 SAST - Security Code Scan
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install Security Code Scan
        run: dotnet tool install --global security-scan

      - name: Run Security Code Scan
        run: security-scan --export=security-scan-results.sarif || true

      - name: Check if SARIF file exists
        id: check_file
        run: |
          if [ -f "security-scan-results.sarif" ]; then
            echo "sarif_exists=true" >> $GITHUB_OUTPUT
          else
            echo "sarif_exists=false" >> $GITHUB_OUTPUT
            echo "Warning: SARIF file was not generated."
          fi
      - name: Upload SARIF file
        if: steps.check_file.outputs.sarif_exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: security-scan-results.sarif

  archive:
    name: 📦 Final Security Archive
    runs-on: ubuntu-latest
    needs: [dotnet-vulnerabilities, owasp-sca, security-code-scan]
    steps:
      - name: ✅ Security scan summary
        run: echo "✔ All security checks (SCA + SAST) completed for order Microservice."

      - name: 📊 Create security report summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "## Scan Timestamp" >> security-summary.md
          echo "$(date)" >> security-summary.md
          echo "## Workflow Run" >> security-summary.md
          echo "## Results" >> security-summary.md
          echo "- Check the workflow artifacts for detailed reports" >> security-summary.md
      - uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 30
